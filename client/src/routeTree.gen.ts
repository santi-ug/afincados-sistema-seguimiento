/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProductosImport } from './routes/productos'
import { Route as EmpleadosImport } from './routes/empleados'
import { Route as IndexImport } from './routes/index'
import { Route as RegistrosUploadArchivoExcelIdImport } from './routes/registros/upload/$archivoExcelId'

// Create/Update Routes

const ProductosRoute = ProductosImport.update({
  id: '/productos',
  path: '/productos',
  getParentRoute: () => rootRoute,
} as any)

const EmpleadosRoute = EmpleadosImport.update({
  id: '/empleados',
  path: '/empleados',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegistrosUploadArchivoExcelIdRoute =
  RegistrosUploadArchivoExcelIdImport.update({
    id: '/registros/upload/$archivoExcelId',
    path: '/registros/upload/$archivoExcelId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/empleados': {
      id: '/empleados'
      path: '/empleados'
      fullPath: '/empleados'
      preLoaderRoute: typeof EmpleadosImport
      parentRoute: typeof rootRoute
    }
    '/productos': {
      id: '/productos'
      path: '/productos'
      fullPath: '/productos'
      preLoaderRoute: typeof ProductosImport
      parentRoute: typeof rootRoute
    }
    '/registros/upload/$archivoExcelId': {
      id: '/registros/upload/$archivoExcelId'
      path: '/registros/upload/$archivoExcelId'
      fullPath: '/registros/upload/$archivoExcelId'
      preLoaderRoute: typeof RegistrosUploadArchivoExcelIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/empleados': typeof EmpleadosRoute
  '/productos': typeof ProductosRoute
  '/registros/upload/$archivoExcelId': typeof RegistrosUploadArchivoExcelIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/empleados': typeof EmpleadosRoute
  '/productos': typeof ProductosRoute
  '/registros/upload/$archivoExcelId': typeof RegistrosUploadArchivoExcelIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/empleados': typeof EmpleadosRoute
  '/productos': typeof ProductosRoute
  '/registros/upload/$archivoExcelId': typeof RegistrosUploadArchivoExcelIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/empleados'
    | '/productos'
    | '/registros/upload/$archivoExcelId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/empleados' | '/productos' | '/registros/upload/$archivoExcelId'
  id:
    | '__root__'
    | '/'
    | '/empleados'
    | '/productos'
    | '/registros/upload/$archivoExcelId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EmpleadosRoute: typeof EmpleadosRoute
  ProductosRoute: typeof ProductosRoute
  RegistrosUploadArchivoExcelIdRoute: typeof RegistrosUploadArchivoExcelIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EmpleadosRoute: EmpleadosRoute,
  ProductosRoute: ProductosRoute,
  RegistrosUploadArchivoExcelIdRoute: RegistrosUploadArchivoExcelIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/empleados",
        "/productos",
        "/registros/upload/$archivoExcelId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/empleados": {
      "filePath": "empleados.tsx"
    },
    "/productos": {
      "filePath": "productos.tsx"
    },
    "/registros/upload/$archivoExcelId": {
      "filePath": "registros/upload/$archivoExcelId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
